generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id
  name          String?
  picture       String?
  sessions      Session[]
  subscription  String?
  notifications Notification[]
  homes         Home[]
}

model Session {
  id         String   @id
  user_id    String
  user       User     @relation(references: [id], fields: [user_id], onDelete: Cascade)
  expires_at DateTime
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  users     User[]
}

model Home {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  icon        String
  members     User[]
  groceries   Grocery[]
  lists       List[]
}

model Grocery {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  Price       Price[]
  homeId      Int
  home        Home          @relation(fields: [homeId], references: [id])
  list        GroceryList[]
}

model Store {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  Price       Price[]
}

model Price {
  id         Int      @id @default(autoincrement())
  price      Float
  date       DateTime
  grocery    Grocery  @relation(fields: [grocery_id], references: [id])
  grocery_id Int
  store      Store    @relation(fields: [store_id], references: [id])
  store_id   Int
}

model List {
  id        Int           @id @default(autoincrement())
  name      String
  completed Boolean       @default(false)
  homeId      Int
  home        Home          @relation(fields: [homeId], references: [id])
  groceries GroceryList[]
}

model GroceryList {
  id        Int     @id @default(autoincrement())
  quantity  Int     @default(1)
  unit      String
  completed Boolean @default(false)
  groceryId Int
  grocery   Grocery @relation(fields: [groceryId], references: [id])
  listId    Int
  list      List    @relation(fields: [listId], references: [id])
}
